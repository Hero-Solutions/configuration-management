---
- name: Install certbot
  apt:
    name:
      - certbot

- name: Make sure lib, log and work dir exist
  file:
    path: "{{ item.path }}"
    state: directory
    recurse: true
    owner: "{{ application_user }}"
    group: "{{ application_user }}"
    mode: "{{ item.mode }}"
  with_items:
    - path: "/etc/letsencrypt/"
      mode: "u+rw,go+r,go-w"
    - path: "/var/lib/letsencrypt/"
      mode: "u+rw,go+r,go-w"
    - path: "/var/log/letsencrypt/"
      mode: "u+rw,go-rwx"

- name: Install LetsEncrypt certificates for all domains
  command: "certbot certonly -n --agree-tos --email {{ letsencrypt_email }} --webroot -w /var/lib/letsencrypt/ --cert-name {{ letsencrypt_domains[0] }} -d {{ letsencrypt_domains | join(' -d ') }}"

- name: Check if LetsEncrypt certificate folder exists
  stat:
    path: "/etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/"
  register: stat_result

- name: Set key and chain location 
  set_fact:
    letsencrypt_key_paths:
      ssl:
        cert: "/etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/fullchain.pem"
        key: "/etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/privkey.pem"
        chain: "/etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/fullchain.pem"
  when: stat_result.stat.exists

- name: Redeploy nginx vhosts
  include_role:
    name: nginx
    tasks_from: create_vhost
    apply:
      vars:
        vhost: "{{ item | combine(letsencrypt_key_paths) }}"
  with_items: "{{ letsencrypt_vhosts }}"
  when: stat_result.stat.exists

